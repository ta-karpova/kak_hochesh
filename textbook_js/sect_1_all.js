// =====================================
// Раздел 1. Основы JavaScript
// =====================================

// =====================================
// 3. Строгий режим — "use strict"
// =====================================
// alert('some code')
// // 'use strict' ниже игнорируется - он должен быть в первой строке
// 'use strict'
// строгий режим не активирован

// =====================================
// 5. Типы данных
// =====================================
// Что выведет
// let hisName = "Ilya"

// alert( `hello ${1}` ) // hello 1
// alert( `hello ${"name"}` ) // hello name
// alert( `hello ${ hisName}` ) // hello Ilya

// =====================================
// 6. Взаимодействие: alert, prompt, confirm
// =====================================
// alert('Hello') // оказывает сообщение и ждёт, пока пользователь нажмёт кнопку «ОК»
// result = prompt(title, [default]) // возвращает текст, указанный в поле для ввода, или null, если ввод отменён пользователем

// Задача
// let nameV = prompt('Ваше имя?', '')
// alert(nameV)

// =====================================
// 7. Преобразование типов
// =====================================

// -------------------------------------
// Логическое преобразование: Значения, которые интуитивно «пустые», вроде 0, пустой строки, null, undefined и NaN, становятся false, остальные true
// console.log( Boolean(1) ) // true
// console.log( Boolean(0) ) // false
// console.log( Boolean('Привет!') ) // true
// console.log( Boolean('') ) // false


// let value = true
// alert(typeof value) // boolean

// value = String(value) // value строка 'true'
// alert(typeof value) // string

// =====================================
// 8. Базовые операторы, математика
// =====================================
// let a = 1, b = 1
// let c = ++a // ?
// let d = b++ // ?
// console.log(a) // 2
// console.log(b) // 2
// console.log(c) // 2
// console.log(d) // 1

// alert( ++a ) // 2, префиксная форма возвращает новое значение
// alert( b++ ) // 1, постфиксная форма возвращает старое значение, но увеличивает значение переменной

// alert( a ) // 2, значение увеличено один раз
// alert( b ) // 2, значение увеличено один раз

// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 
// Задача 3 - определить результаты 

// '' + 1 + 0 = 10 // '1'+0
// '' - 1 + 0 = -1 // '-' только с числами, '' = 0
// true + false = 1 // после преобразования 1 + 0 = 1
// 6 / '3' = 2 // преобразовывает в число
// '2' * '3' = 6 // только с числами
// 4 + 5 + 'px' = 9px
// '$' + 4 + 5 = $45 // всё становится строкой
// '4' - 2 = 2 // '-' только с числами
// '4px' - 2 = NaN // не удалось преобразовать в число
// 7 / 0 = Infinity
// '  -9  ' + 5 = '  -9  5' // строки сложились, если поменять местами слагаемые, они тоже просто строкой станут
// '  -9  ' - 5 = -14 //'-' только с числами, строка стала числом
// null + 1 = 1 // null становится 0 после численного преобразования
// undefined + 1 = NaN // undefined становится NaN после численного преобразования
// ' \t \n' - 2 = -2 // символы игнорируются (????????????) r, t, n игнор, остальные нет
// console.log(' \r' - 2) //-2
// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 

// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 
// Задача 4

// let a = prompt('Первое число?', 1)
// let b = prompt('Второе число?', 2)
// console.log(Number(a) + Number(b)) // (+a + +b)
// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 

// =====================================
// 9. Операторы сравнения - разные типы при сравнении становятся числами (исключение строгое равенство/неравенство) 
// =====================================

// Результаты сравнения имеют логический тип
// console.log( 2 > 1 )  // true 
// console.log( 2 == 1 ) // false 
// console.log( 2 != 1 ) // true 

// -------------------------------------
// Строки сравниваются в алфавитном порядке посимвольно, в кодировке  Unicode
// console.log( 'Коты' > 'Кода' ) // true
// console.log( 'Кода' > 'Кода' ) // false
// console.log( 'Сонный' > 'Сон' ) // true
// console.log( 'Мишка' > 'мишка' ) // false строчные буквы имеют больший код во внутренней таблице кодирования

// -------------------------------------
// При сравнении значений разных типов JavaScript приводит каждое из них к числу
// console.log( '2' > 1 ); // true, строка '2' становится числом 2
// console.log( '01' == 1 ); // true, строка '01' становится числом 1
// console.log( true == 1 ); // true
// console.log( false == 0 ); // true
// -------------------------------------
// let a = 1;
// console.log( Boolean(a) ); // true
// -------------------------------------
// let a = 0;
// console.log( Boolean(a) ); // false
// -------------------------------------
// let a = 1;
// console.log( Boolean(a) ); // true
// -------------------------------------
// Странный пример
// let a = 0
// console.log(Boolean(a)) // false
// let b = "0"
// console.log(Boolean(b)) // true
// console.log(a == b) // true
// -------------------------------------

// -------------------------------------
// Строгое сравнение
// console.log( 0 == false ) // true
// console.log( '' == false ) // true
// console.log( 0 === false ) // СТРОГОЕ, false, сравниваются разные типы
// -------------------------------------
// Сравнение с null и undefined
// console.log(null === undefined) // false (разные типы -> различны)
// console.log(null == undefined) // true (специальное правило языка)
// -------------------------------------
// null с нулём ():
// console.log(null > 0)  // (1) false (null стал 0)
// console.log(null == 0) // (2) false (для нестрогого равенства == значений undefined и null действует особое правило: эти значения ни к чему не приводятся, они равны друг другу и не равны ничему другому)
// console.log(null >= 0) // (3) true
// Значение undefined несравнимо с другими значениями, везде false
// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 
// Задача 1 (определить результаты)

// console.log (5 > 4) // true
// console.log('ананас' > 'яблоко') // false
// console.log('2' > '12') // true - посимвольное сравнение, 2 > 1
// console.log(undefined == null) // true
// console.log(undefined === null) // false
// console.log(null == '\n0\n') // false (по правилу)
// console.log(null === +'\n0\n') // false (строгое сравнение разных типов)
// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~

// =====================================
// 10. Условное ветвление: if, '?'
// =====================================

// 1. let result = условие ? значение1 : значение2
// Сначала вычисляется условие: если оно истинно, тогда возвращается значение1, в противном случае – значение2
// -----------------------------------------------
// 2. Нетрадиционное использование '?' но так лучше не надо
// let company = prompt('Какая компания создала JavaScript?', '')
// (company == 'Netscape') ?
//    alert('Верно!') : alert('Неправильно.')

// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 
// Задача 2
// let nameJS = prompt('Какое "официальное" название JavaScript?', '')
 
// if (nameJS == 'ECMAScript') {
//     console.log('Правильно!')
// } else {
//     console.log('Не знаете? “ECMAScript”!')
// }
// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 

// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 
// Задача 3
// let value = prompt('')
// if (value > 0) {
//     alert('1')
// } else if (value < 0) {
//     alert('-1')
// } else if (value = 1) {
//     alert('0')
// }
// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 

// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 
// Задача 4
// let result = (a + b < 4) ? 'Мало' : 'Много'
// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 

// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 
// Задача 5
// let login = prompt('')
//  let massege = (login == 'Сотрудник') ? 'Привет' : 
//  (login == 'Директор') ? 'Здравствуйте' : 
//  (login == '') ? 'Нет логина': ''

// Было:
// let login = prompt('')
// let message;
// if (login == 'Сотрудник') {
//   message = 'Привет';
// } else if (login == 'Директор') {
//   message = 'Здравствуйте';
// } else if (login == '') {
//   message = 'Нет логина';
// } else {
//   message = '';
// }
// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 

// =====================================
// 11. Логические операторы || (ИЛИ), && (И), ! (НЕ)
// =====================================
// ИЛИ «||» находит первое истинное значение ->
// -------------------------------------------------
// let x
// true || (x = 1)
// alert(x) // undefined, потому что (x = 1) не вычисляется
// -------------------------------------------------
// let x
// false || (x = 1)
// alert(x) // 1
// -------------------------------------------------
// И «&&» находит первое ложное значение (Когда все значения верны, возвращается последнее)
// -------------------------------------------------

// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 
// Задача 2
// alert(alert(10) || 2 || alert(3)) // сначала 10 (выполнит alert, потом 2 - первое истинное)
// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 

// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 
// Задача 4
// alert(alert(1) && alert(2)) // 1 - до правого alert дело не дойдёт, вычисления закончатся на левом
// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 

// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 
// Задача 6-7
// if (!(age >= 14 && age <= 90)) // или if (age < 14 || age > 90)
// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 

// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 
// Задача 8
// if (-1 || 0) alert('first') // true, выполнится -1 || 0 = -1
// if (-1 && 0) alert('second') // false, тк -1 && 0 = 0
// if (null || -1 && 1) alert('third') // true, null || -1 && 1 -> null || 1 -> 1
// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 

// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 
// Задача 9
// let userPost = prompt ('Кто там?', '')

// if (userPost == 'Админ') {
//     let password = prompt('Пароль?', '') // !!!!!!!!!
//     if (password == 'Я главный') {
//         alert ('Здравствуйте!')
//     } else if (password == '' || password == null) {
//         alert ('Отмена')
//     } else {
//         alert ('Неверный пароль!')
//     }
// } else if (userPost == '' || userPost == null) {
//     alert ('Отмена')
// } else {
//     alert('Я вас не знаю')
// } 
// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 

// =====================================
// 12. Оператор объединения с null '??' - возвращает первый аргумент, если он не null/undefined, иначе второй.
// =====================================
// result = a ?? b // если a определено, то "a", если не определено, то "b"
// получаем из двух значений то, которое определено
// result = (a !== null && a !== undefined) ? a : b - то же самое 

// ---------------------------------------
// let user = 'Иван'
// alert(user ?? 'Аноним') // Иван
// ---------------------------------------

// =====================================
// 13. Циклы while и for
// =====================================
// while(…) {…} или do..while
// ---------------------------------------
// let i = 0;
// while (i < 3) { // выводит 0, затем 1, затем 2
//   alert( i );
//   i++;
// }
// ---------------------------------------
// for (начало; условие; шаг) {
//     // ... тело цикла ...
//   }
// ---------------------------------------
// let i = 0; // без этой строки в 314 будет ошибка, тк вне цикла переменная не объявлялась
// for (i = 0; i < 3; i++) { // используем существующую переменную
//   alert(i); // 0, 1, 2
// }
// alert(i); // 3, переменная доступна, т.к. была объявлена снаружи цикла
// ---------------------------------------
// Убрали шаг, убрали начальное значение 
// let i = 0
// for (; i < 3;) {
//   alert( i++ )
// }

// break - выход из цикла
// continue - переход к следующей итераци - цикл не прерывается, а переходит к следующей итерации (если условие все ещё равно true)

//----------------------------------------
// Вывод нечетных 
// for (let i = 0; i < 10; i++) {
//     // если true, пропустить оставшуюся часть тела цикла
//     if (i % 2 == 0) continue
//       alert(i) // 1, 3, 5, 7, 9
//   }
// ---------------------------------------

// Метка
// outer: for (let i = 0; i < 3; i++) {
//     for (let j = 0; j < 3; j++) {
//         let input = prompt(`Значение на координатах (${i},${j})`, ''); 
//         // если пустая строка или Отмена, то выйти из обоих циклов
//       if (!input) break outer // (*)
//         // сделать что-нибудь со значениями...
//     }
//   }
//     alert('Готово!')
 // --------------------------------------

// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 
// Задача 2
// let i = 0
// while (++i < 5) alert( i ) // выведет 1-4
// while (i++ < 5) alert( i ) // выведет 1-5
// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 

// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 
// Задача 4
// for (let i = 2; i <= 10; i++) {
//     if (i % 2 !== 0) continue 
//     alert (i)
// }
// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 

// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 
// Задача 5
// let i = 0
// white (i < 3) {
//     alert( `number ${i}!` )
//     i++
// }
// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 

// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 
// Задача 6 
// let val
// do {
//     val = prompt ('Введите число', '')
// } while (val <= 100 && val)
//  Цикл сначала выполняет тело, затем проверяет условие
// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 

// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 
// Задача 7 - простые числа от 2 до range
// let n = 10
// nextPrime:
// for (let i = 2; i <= n; i++) { // Для всех i...

//   for (let j = 2; j < i; j++) { // проверить, делится ли число..
//     if (i % j == 0) continue nextPrime // не подходит, берём следующее
//   }

//   alert( i ); // простое число
// }
// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 

// =====================================
// 14. Конструкция "switch"
// =====================================
// witch(x) {
//     case 'value1':  // if (x === 'value1')
//       ...
//       [break]

// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 
// Задача 1 - Напишите "if", аналогичный "switch"
// let browser 
// if (browser === 'Edge') {
//     alert ("You've got the Edge!")
// } else if (browser === 'Chrome') { // можно было через ||
//     alert ('Okay we support these browsers too' )
// } else if (browser === 'Firefox') {
//     alert ('Okay we support these browsers too' )
// } else if (browser === 'Safari') {
//     alert ('Okay we support these browsers too' )
// } else if (browser === 'Opera') {
//     alert ('Okay we support these browsers too' )
// } else {
//     alert( 'We hope that this page looks ok!' )
// }
// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 

// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 
// Задача 2
// const number = +prompt('Введите число между 0 и 3', '')

// switch (number) {
//     case 0:
//         alert('Вы ввели число 0')
//         break
    
//     case 1:
//         alert('Вы ввели число 1')
//         break    

//     case 2: //if (number === 2 || number === 3)
//     case 3:
//         alert('Вы ввели число 2, а может и 3')
//         break
// }
// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 

// =====================================
// 15. Функции
// =====================================

// Пример из while и for
// function showPrimes(n) {

//     for (let i = 2; i < n; i++) {
//       if (!isPrime(i)) continue;
  
//       alert(i);  // простое
//     }
//   }
  
//   function isPrime(n) {
//     for (let i = 2; i < n; i++) {
//       if ( n % i == 0) return false;
//     }
//     return true;
//   }

// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 
// Задача 2
// function checkAge(age) { // 1
//     (age > 18) ? true : confirm('Родители разрешили?')
//   }
// -----------------------------
// function checkAge(age) { // 2
//     return (age > 18) || confirm('Родители разрешили?')
// }
// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 

// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 
// Задача 3 - Минимум из 2х чисел

// function getMin (a, b) {
//     (a < b) ? a : b
// }

// getMin (2, 5)
// getMin(3, -1)
// getMin(1, 1) 
// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 

// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 
// Задача 4
// let x = prompt ('x', '') // аргумент
// let n = prompt ('n', '') // степень

// function pow(x, n) {
//     let result = x
//     for (let i = 1; i < n; i++) {
//         result = x * result
//     }
//     return result
// }

// alert (pow (x,n))
// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 

// =====================================
// 16. Function Expression
// =====================================

// let sayHi = function() {
//     alert( "Привет" );
//   };

// alert( sayHi ); // выведет код функции

// --------------------------------------
// function ask(question, yes, no) {
//     if (confirm(question)) yes()
//     else no();
//   }
  
//   ask(
//     "Вы согласны?",
//     function() { alert("Вы согласились."); }, // анонимные
//     function() { alert("Вы отменили выполнение."); }
//   );

// --------------------------------------
// let age = prompt("Сколько Вам лет?", 18);
// let welcome; // объявляется тут, чтобы обеспечить видимость 

// if (age < 18) {

//   welcome = function() {
//     alert("Привет!");
//   };

// } else {

//   welcome = function() {
//     alert("Здравствуйте!");
//   };

// }
// welcome(); // теперь всё в порядке

// =====================================
// 17. Функции-стрелки, основы
// =====================================

function ask(question, yes, no) {
    if (confirm(question)) yes()
    else no();
  }
  
  ask(
    "Вы согласны?",
    () => alert("Вы согласились."),
    () => alert("Вы отменили выполнение.")
  );













